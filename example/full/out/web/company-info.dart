// Auto-generated from company-info.html.
// DO NOT EDIT.

library companyinfo;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import 'dart:html';
import 'package:web_ui/watcher.dart' as watchers;
import '../../../lib/chopin.dart' as chopin;



class CompanyInfoComponent extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __html1 = new autogenerated.Element.tag('template'), __html2 = new autogenerated.Element.tag('h2'), __html3 = new autogenerated.ParagraphElement(), __html4 = new autogenerated.ParagraphElement(), __html5 = new autogenerated.Element.html('<p>....</p>'), __html6 = new autogenerated.Element.tag('h2'), __html7 = new autogenerated.Element.html('<p>....</p>'), __html8 = new autogenerated.Element.tag('h2'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <ul class="nav nav-pills">
          <li class="" id="__e-24">
            <a href="" id="__e-23">Info</a>
          </li>
          <li class="" id="__e-26">
            <a href="" id="__e-25">Activities</a>
          </li>
          <li class="" id="__e-28">
            <a href="" id="__e-27">Notes</a>
          </li>
        </ul>
        <template id="__e-36"></template>
        <template id="__e-39"></template>
        <template id="__e-42"></template>
        <script type="application/dart" src="company-info.dart"></script>
      ''');
  autogenerated.AnchorElement __e23, __e25, __e27;
  autogenerated.Element __e36, __e39, __e42;
  autogenerated.LIElement __e24, __e26, __e28;
  autogenerated.Template __t;

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    _root.nodes.add(__shadowTemplate.clone(true));
    __e24 = _root.query('#__e-24');
    __e23 = __e24.query('#__e-23');
    __t.listen(__e23.onClick, ($event) { showSection('info', $event); });
    __t.bindClass(__e24, () => activeClass('info'), false);
    __e26 = _root.query('#__e-26');
    __e25 = __e26.query('#__e-25');
    __t.listen(__e25.onClick, ($event) { showSection('activities', $event); });
    __t.bindClass(__e26, () => activeClass('activities'), false);
    __e28 = _root.query('#__e-28');
    __e27 = __e28.query('#__e-27');
    __t.listen(__e27.onClick, ($event) { showSection('notes', $event); });
    __t.bindClass(__e28, () => activeClass('notes'), false);
    __e36 = _root.query('#__e-36');
    __t.conditional(__e36, () => section == 'info', (__t) {
      var __e35;
      __e35 = __html1.clone(true);
      __t.conditional(__e35, () => company != null, (__t) {
        var __e30, __e32, __e34;
        __e30 = __html2.clone(true);
        var __binding29 = __t.contentBind(() => company['name'], false);
        __e30.nodes.addAll([__binding29,
            new autogenerated.Text(': Info')]);
        __e32 = __html3.clone(true);
        var __binding31 = __t.contentBind(() => company['id'], false);
        __e32.nodes.addAll([new autogenerated.Text('id: '),
            __binding31]);
        __e34 = __html4.clone(true);
        var __binding33 = __t.contentBind(() => company['revenue'], false);
        __e34.nodes.addAll([new autogenerated.Text('revenue: '),
            __binding33]);
      __t.addAll([new autogenerated.Text('\n            '),
          __e30,
          new autogenerated.Text('\n            '),
          __e32,
          new autogenerated.Text('\n            '),
          __e34,
          new autogenerated.Text('\n          ')]);
      });

    __t.addAll([new autogenerated.Text('\n          '),
        __e35,
        new autogenerated.Text('\n        ')]);
    });

    __e39 = _root.query('#__e-39');
    __t.conditional(__e39, () => section == 'activities', (__t) {
      var __e38;
      __e38 = __html6.clone(true);
      var __binding37 = __t.contentBind(() => company['name'], false);
      __e38.nodes.addAll([__binding37,
          new autogenerated.Text(': Activities')]);
    __t.addAll([new autogenerated.Text('\n          '),
        __e38,
        new autogenerated.Text('\n          '),
        __html5.clone(true),
        new autogenerated.Text('\n        ')]);
    });

    __e42 = _root.query('#__e-42');
    __t.conditional(__e42, () => section == 'notes', (__t) {
      var __e41;
      __e41 = __html8.clone(true);
      var __binding40 = __t.contentBind(() => company['name'], false);
      __e41.nodes.addAll([__binding40,
          new autogenerated.Text(': Notes')]);
    __t.addAll([new autogenerated.Text('\n          '),
        __e41,
        new autogenerated.Text('\n          '),
        __html7.clone(true),
        new autogenerated.Text('\n        ')]);
    });

    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e24 = __e23 = __e26 = __e25 = __e28 = __e27 = __e36 = __e39 = __e42 = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  
  var company;
  String section;
  
  inserted() {
    // TODO(pavelgj): find a better API for accessing the view.
    parent.xtag.onTokenChange((newToken) {
      print('section new token $newToken');
      if (['info', 'activities', 'notes'].contains(newToken)) {
        showSection(newToken, null, updateUrl: false, replace:true);
      } else {
        showSection('info', null, replace:true);
      }
    });
    company = parent.xtag.company;
  }
  
  showSection(section, e, {updateUrl: true, replace: false, silent: true}) {
    if (e != null) {
      e.preventDefault();
    }
    this.section = section;
    watchers.dispatch();
    chopin.setToken(this, section, silent: silent, updateUrl: updateUrl, replace: replace);
  }
  
  String activeClass(sect) {
    if (sect == section) {
      return "active";
    }
    return "";
  }

}
//@ sourceMappingURL=company-info.dart.map