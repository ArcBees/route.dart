// Auto-generated from root-view.html.
// DO NOT EDIT.

library chopinview;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import '../../../packages/web_ui/web_ui.dart';
import 'dart:html';
import '../../../lib/chopin.dart' as chopin;
import 'view.dart';



class RootViewComponent extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /**
   * Shadow root for this component. We use 'var' to allow simulating shadow DOM
   * on browsers that don't support this feature.
   */
  var _root;
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
      ''');
  autogenerated.Template __t;

  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    _root.nodes.add(__shadowTemplate.clone(true));
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = null;
  }

  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }

  /** Original code from the component. */

  chopin.Config config;
  String currentViewId;
  WebComponent _prevComp;
  WebComponent _prevViewComp;
  bool historyBound = false;
  
  inserted() {
    window.onPopState.listen((_) {
      var hash = window.location.hash;
      print('pop state $hash');
      if (hash != null && hash.startsWith('#/')) {
        var viewId = hash.split('/')[1];
        if (currentViewId != viewId) {
          if (_prevComp != null) {
            host.children.clear();
            var lifecycleCaller = new ComponentItem(_prevComp)
               ..remove();
          }
          var comp = new ViewComponent();
          comp.viewId = viewId;
          comp.historyBound = historyBound;
          _prevComp = createAndInsertComponent(comp);
          currentViewId = viewId;
          _prevViewComp = comp;
        }
        _prevViewComp.propagateTokens(hash.split('/').sublist(2));
      }
    });
  }
  
  createAndInsertComponent(WebComponent comp) {
    comp.host = new DivElement();
    var lifecycleCaller = new ComponentItem(comp)
        ..create();
    host.children.add(comp.host);
    lifecycleCaller.insert();
    return comp;
  }
}
//@ sourceMappingURL=root-view.dart.map